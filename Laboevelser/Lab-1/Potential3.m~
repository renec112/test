% Programmet udregner og plotter ækvipotentialkurver og E-felt fra
% ledere. Konfigurationen af lederne kan indtastes direkte i en matrix eller
% indlæses fra en bitmap-fil. På det røde område sættes potentialet til +V0,
% på det blå til -V0, på det grønne til V0/2 og på det hvide til 0. Er der
% intet blåt område sættes kanten til -V0, ellers bestemmes potentialet på
% kanten som gennemsnittet af potentialet fra nabofelterne (ligesom resten
% af det hvide område). Potentialet skal være det samme overalt på det
% grønne område, men værdien kendes ikke fra starten, så der skal også
% itereres over dette område.

% Brug kvadratisk billede!!!


clear all; clc; close all

% Værdi af potentialet på det røde område.
V0 = 1;

% Indtast værdien af potentialerne i en matrix...
% $$$ m = 50;
% $$$ Vinit = -ones(m,m);
% $$$ Vinit(1,:) = V0;
% $$$ %Vinit(m,:) = V0;
% $$$ Vinit(2:m-1,2:m-1) = 0;


% ...eller indlæs billedet fra en fil.
filnavn = 'capacitor.bmp';
[n, Vinit] = FindMatrix3(filnavn,V0);

% Vis evt. billedet.
figure(1);
billede = imread(filnavn,'bmp');
image(billede);
set(gca,'YDir','normal');
axis image;

% Gem den matrix der startes med.
V = Vinit;

% Mindste værdi af potentialet.
Vmin = min(min(V));

% Nøjagtighed.
epsilon = 0.001;

% Størrelse af ændringen af potentialet
delta = inf;

% Index i billedet hvor der er blåt, grønt og rødt.
red     = Vinit ==  V0;
[Ired,Jred] = find(red);

blue    = Vinit == -V0;
[Iblue,Jblue] = find(blue);

green   = Vinit ==  V0/2;
[Igreen,Jgreen] = find(green);

white   = Vinit ==  0;
target  = green | white;

% Find naboer
naboMatrix = [zeros(n-1,1) eye(n-1); zeros(1, n)]...
              + [zeros(1, n); eye(n-1) zeros(n-1,1)];

antalNaboer = naboMatrix*ones(n)+(naboMatrix*ones(n)')';
            
% Bliv ved med at iterere indtil nøjagtigheden er stor nok.
while delta>epsilon,
    % Gem den tidligere matrix som reference
    Vold = V;
  
    omkredsPotentiale = naboMatrix*V+(naboMatrix*V')';
  
    V(target) = omkredsPotentiale(target)./antalNaboer(target);
  
    % Udregn gennemsnittet af det grønne område og sæt potentialet på dette
    % område lig med gennemsnittet.
    if any(any(green))
        V(green) = mean(mean(V(green)));
    end
  
    % Beregn størrelsen af ændringen.
    % delta = max(max(abs(V-Vold)));
    delta = max(max(abs((V-Vold)./(V-Vmin+eps))));
end

% Beregn E-feltet.
[DVx,DVy] = gradient(-V);

figure(2);
imagesc(V);
% $$$ hold on;
% $$$ plot(Jblue,Iblue,'wx');
% $$$ plot(Jred,Ired,'wx');
% $$$ plot(Jgreen,Igreen,'wx');
% $$$ hold off;
colorbar;
set(gca,'YDir','normal');
axis square;

figure(3);
contour(V,20);  % Plot potentialkurver.
hold on;
quiver(DVx,DVy,2,'k');  % Plot E-feltet.
plot(Jred,Ired,'rs','MarkerFaceColor','r',...
                'MarkerSize',4);
plot(Jgreen,Igreen,'gs','MarkerFaceColor','g',...
                'MarkerSize',4);
plot(Jblue,Iblue,'bs','MarkerFaceColor','b',...
                'MarkerSize',4);
hold off;
colorbar;
axis square;
